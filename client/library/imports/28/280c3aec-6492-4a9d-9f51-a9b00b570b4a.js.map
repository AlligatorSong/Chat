{"version":3,"sources":["../../../../assets/Script/assets/Script/Load.js"],"names":["pomelo","window","require","account","cc","Class","extends","Component","properties","nameEditBox","default","type","EditBox","channelEditBox","joinBtn","Button","seeBtn","onLoad","isEnter","localName","getUserName","string","localChannel","getUserChannel","clickSeeBtn","inputFlag","InputFlag","PASSWORD","DEFAULT","queryEntry","uid","callback","route","init","host","port","log","request","data","disconnect","code","LOGIN_ERROR","clickJoinBtn","self","rid","setUserName","setUserChannel","username","error","memGroup","i","users","length","value","setMembers","director","loadScene","update","dt"],"mappings":"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","file":"Load.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// window.io = require('./lib/socket.io');\n// require('./lib/pomeloclient');\nvar pomelo = window.pomelo;\nrequire('Account');\nvar account = window.account\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        nameEditBox: {\n            default: null,\n            type: cc.EditBox\n        },\n        channelEditBox: {\n            default: null,\n            type: cc.EditBox\n        },\n        joinBtn: {\n            default: null,\n            type: cc.Button\n        },\n        seeBtn: {\n            default: null,\n            type: cc.Button\n        },\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.isEnter = false;\n        var localName = account.getUserName();\n        if (localName) {\n            this.nameEditBox.string = localName;\n        }\n        var localChannel = account.getUserChannel();\n        if (localChannel) {\n            this.channelEditBox.string = localChannel;\n        }\n    },\n\n    clickSeeBtn: function () {\n        if (this.channelEditBox.inputFlag === cc.EditBox.InputFlag.PASSWORD) {\n            this.channelEditBox.inputFlag = cc.EditBox.InputFlag.DEFAULT;\n        } else {\n            this.channelEditBox.inputFlag = cc.EditBox.InputFlag.PASSWORD;\n        }\n    },\n    // query connector\n    queryEntry(uid, callback) {\n        var route = 'gate.gateHandler.queryEntry';\n        pomelo.init({\n            host: '192.168.31.11',\n            port: 15014,\n            log: true\n        }, function () {\n            pomelo.request(route, {\n                uid: uid\n            }, function (data) {\n                pomelo.disconnect();\n                if (data.code === 500) {\n                    cc.log(LOGIN_ERROR);\n                    return;\n                }\n                callback(data.host, data.port);\n            });\n        });\n    },\n\n    clickJoinBtn: function () {\n        if (this.nameEditBox.string===null\n            || this.channelEditBox.string===null\n            || this.nameEditBox.string===''\n            || this.channelEditBox.string===''\n            || this.isEnter ) {\n            return;\n        }\n        this.isEnter = true;\n        //query entry of connection\n        let self = this\n        let uid = this.nameEditBox.string;\n        let rid = this.channelEditBox.string;\n        account.setUserName(uid);\n        account.setUserChannel(rid);\n        self.queryEntry(uid, function (host, port) {\n            pomelo.init({\n                host: host,\n                port: port,\n                log: true\n            }, function () {\n                var route = \"connector.entryHandler.enter\";\n                pomelo.request(route, {\n                    username: uid,\n                    rid: rid\n                }, function (data) {\n                    if (data.error) {\n                        cc.log(\"DUPLICATE_ERROR\");\n                        return;\n                    }\n                    let memGroup = {};\n                    for (var i = 0; i < data.users.length; i++) {\n                        let value = data.users[i];\n                        if (value!==uid){\n                            memGroup[value] = value;\n                        }\n                    };\n                    account.setMembers(memGroup);\n                    cc.director.loadScene(\"chat\");\n                });\n            });\n        });\n    },\n\n    // called every frame\n    update: function (dt) {\n    },\n});\n"]}