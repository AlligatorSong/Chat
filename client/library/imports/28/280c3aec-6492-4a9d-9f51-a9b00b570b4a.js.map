{"version":3,"sources":["assets\\Script\\Load.js"],"names":["pomelo","window","username","users","rid","base","increase","reg","LOGIN_ERROR","LENGTH_ERROR","NAME_ERROR","DUPLICATE_ERROR","Account","require","account","cc","Class","extends","Component","properties","nameEditBox","default","type","EditBox","channelEditBox","joinBtn","Button","seeBtn","onLoad","localName","getUserName","string","localChannel","getUserChannel","clickSeeBtn","inputFlag","InputFlag","PASSWORD","DEFAULT","queryEntry","uid","callback","route","init","host","location","hostname","port","log","request","data","disconnect","code","clickJoinBtn","self","error","update","dt"],"mappings":"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","file":"unknown","sourcesContent":["var pomelo = window.pomelo;\nvar username;\nvar users;\nvar rid;\nvar base = 1000;\nvar increase = 25;\nvar reg = /^[a-zA-Z0-9_\\u4e00-\\u9fa5]+$/;\nvar LOGIN_ERROR = \"There is no server to log in, please wait.\";\nvar LENGTH_ERROR = \"Name/Channel is too long or too short. 20 character max.\";\nvar NAME_ERROR = \"Bad character in Name/Channel. Can only have letters, numbers, Chinese characters, and '_'\";\nvar DUPLICATE_ERROR = \"Please change your name to login.\";\n\nvar Account = require('Account');\nvar account = new Account()\nwindow.account = account\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        nameEditBox: {\n            default: null,\n            type: cc.EditBox\n        },\n        channelEditBox: {\n            default: null,\n            type: cc.EditBox\n        },\n        joinBtn: {\n                default: null,\n                type: cc.Button\n            },\n        seeBtn: {\n                default: null,\n                type: cc.Button\n            },\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        var localName =  account.getUserName();\n        if (localName) {\n            this.nameEditBox.string = localName;\n        }\n        var localChannel =  account.getUserChannel();\n        if (localChannel) {\n            this.channelEditBox.string = localChannel;\n        }\n    },\n\n    clickSeeBtn: function () {\n        if (this.channelEditBox.inputFlag===cc.EditBox.InputFlag.PASSWORD){\n            this.channelEditBox.inputFlag = cc.EditBox.InputFlag.DEFAULT\n        }else{\n            this.channelEditBox.inputFlag = cc.EditBox.InputFlag.PASSWORD\n        }\n    },\n    // query connector\n    queryEntry(uid, callback) {\n        var route = 'gate.gateHandler.queryEntry';\n        pomelo.init({\n            host: window.location.hostname,\n            port: 3014,\n            log: true\n        }, function() {\n            pomelo.request(route, {\n                uid: uid\n            }, function(data) {\n                pomelo.disconnect();\n                if(data.code === 500) {\n                    cc.log(LOGIN_ERROR);\n                    return;\n                }\n                callback(data.host, data.port);\n            });\n        });\n    },\n\n    clickJoinBtn: function () {\n        if (this.nameEditBox.string===null\n            || this.channelEditBox.string===null\n            || this.nameEditBox.string===''\n            || this.channelEditBox.string==='') {\n            return;\n        }\n        \n        //query entry of connection\n        let self = this\n        let uid = this.nameEditBox.string;\n        let rid = this.channelEditBox.string;\n\t\tself.queryEntry(uid, function(host, port) {\n\t\t\tpomelo.init({\n\t\t\t\thost: host,\n\t\t\t\tport: port,\n\t\t\t\tlog: true\n\t\t\t}, function() {\n\t\t\t\tvar route = \"connector.entryHandler.enter\";\n\t\t\t\tpomelo.request(route, {\n\t\t\t\t\tusername: uid,\n\t\t\t\t\trid: rid\n\t\t\t\t}, function(data) {\n\t\t\t\t\tif(data.error) {\n\t\t\t\t\t\tcc.log(DUPLICATE_ERROR);\n\t\t\t\t\t\treturn;\n                    }\n\t\t\t\t\t\tcc.log('---------11111111111');\n\t\t\t\t\t\tcc.log(data);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n    },\n\n    // called every frame\n    update: function (dt) {\n    },\n});\n"]}